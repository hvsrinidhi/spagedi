CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
SET(CMAKE_BUILD_TYPE_INIT "RelWithDebInfo")
SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/Modules")

PROJECT(SPAGeDi)

SET(SPAGEDI_NAME "SPAGeDi")
SET(SPAGEDI_VERSION "1.4a-CUSTOM")
SET(SPAGEDI_VERSION_MAJOR "1")
SET(SPAGEDI_VERSION_MINOR "4")
SET(SPAGEDI_VERSION_PATCH "a")

FIND_PACKAGE(Git)

IF(GIT_FOUND)
  EXECUTE_PROCESS(COMMAND ${GIT_EXECUTABLE} describe --tags --dirty
    RESULT_VARIABLE res_var OUTPUT_VARIABLE GIT_COM_ID
     ERROR_QUIET)
  IF(${res_var} EQUAL 0 )
   	STRING( REPLACE "\n" "" GIT_COMMIT_ID "${GIT_COM_ID}" )
  ENDIF()
ENDIF()

SET(CMAKE_VERBOSE_MAKEFILE OFF)

IF(APPLE)
  IF(NOT DEFINED APPLE_BUNDLE)
	SET(APPLE_BUNDLE OFF)
  ENDIF(NOT DEFINED APPLE_BUNDLE)
  IF(NOT DEFINED APPLE_BUNDLE_APP)
    SET(APPLE_BUNDLE_APP OFF)
  ENDIF(NOT DEFINED APPLE_BUNDLE_APP)
ELSE(APPLE)
  SET(APPLE_BUNDLE OFF)
  SET(APPLE_BUNDLE_APP OFF)
ENDIF(APPLE)

IF(APPLE_BUNDLE)
  # Create 32-bit Universal Binary
  #SET(CMAKE_OSX_ARCHITECTURES "ppc;i386")
  #SET(CPACK_SYSTEM_NAME "${CMAKE_SYSTEM_NAME}-universal")
  IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX "/Applications")
  ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
ENDIF(APPLE_BUNDLE)

IF(WIN32 AND NOT UNIX)
  SET(SPAGEDI_DIR)
ELSEIF(APPLE_BUNDLE)
  SET(SPAGEDI_DIR)
ELSE(WIN32 AND NOT UNIX)
  SET(SPAGEDI_DIR "/spagedi-${SPAGEDI_VERSION}")
ENDIF(WIN32 AND NOT UNIX)

SET(CMAKE_DATA_DIR "share${SPAGEDI_DIR}" CACHE STRING
  "Install location for data (relative to prefix).")
SET(CMAKE_DOC_DIR "doc${SPAGEDI_DIR}" CACHE STRING
  "Install location for documentation (relative to prefix).")
SET(CMAKE_MAN_DIR "man" CACHE STRING
  "Install location for man pages (relative to prefix).")
MARK_AS_ADVANCED(CMAKE_DATA_DIR CMAKE_DOC_DIR CMAKE_MAN_DIR)

SET(CPACK_SOURCE_IGNORE_FILES
  "/CVS/" /\\\\\\\\.bzr/;/\\\\\\\\.hg/;/\\\\\\\\.git/;\\\\\\\\.swp$;\\\\\\\\.#;/#"
  "/CVS/" "/\\\\.svn/" "/\\\\.bzr/" "/\\\\.hg/" "/\\\\.git/"  "\\\\.swp$"
  "\\\\.#"  "/#"  ".*~$"
  "/releng/" "/build/[^.]"
  "SPAGeDi[-]1"  "spagedi[-]1"
  "spagedi\\\\.exe"  "spagedi$"
  "/CMakeFiles/"  "CMakeCache\\\\.txt"
  "CPack.*Config\\\\.cmake"  "cmake_install\\\\.cmake"
  "install_manifest\\\\.txt$"
  "_CPACK_PACKAGES"  "_CPack_Packages"
  "\\\\.vcproj"  "\\\\.dir"  "\\\\.ncb$"  "\\\\.sln$"  "\\\\.suo$"
  "Makefile$" "\\\\.ilk"  "\\\\.pdb"
)

SET(CPACK_PACKAGE_INSTALL_DIRECTORY "${SPAGEDI_NAME}")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Spatial Pattern Analysis of Genetic Diversity")
SET(CPACK_PACKAGE_VERSION ${SPAGEDI_VERSION})
SET(CPACK_PACKAGE_VERSION_MAJOR ${SPAGEDI_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${SPAGEDI_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${SPAGEDI_VERSION_PATCH})
SET(CPACK_PACKAGE_VENDOR "Olivier Hardy and Xavier Vekemans")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/readme.txt")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/copying.txt")
SET(CPACK_PACKAGE_EXECUTABLES "spagedi" "SPAGeDi")

SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}-${CPACK_PACKAGE_VERSION}")

IF(NOT DEFINED CPACK_SYSTEM_NAME)
  IF("${CMAKE_C_FLAGS}" MATCHES "[-]m32")
    SET(CMAKE_SYSTEM_PROCESSOR x86_32)
  ENDIF("${CMAKE_C_FLAGS}" MATCHES "[-]m32")
# make sure package is not Cygwin-unknown, for Cygwin just
# cygwin is good for the system name
  IF("${CMAKE_SYSTEM_NAME}" STREQUAL "CYGWIN")
    SET(CPACK_SYSTEM_NAME Cygwin)
  ELSE("${CMAKE_SYSTEM_NAME}" STREQUAL "CYGWIN")
    SET(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR})
  ENDIF("${CMAKE_SYSTEM_NAME}" STREQUAL "CYGWIN")
ENDIF(NOT DEFINED CPACK_SYSTEM_NAME)
IF(${CPACK_SYSTEM_NAME} MATCHES Windows)
  IF(CMAKE_CL_64)
    SET(CPACK_SYSTEM_NAME win64-${CMAKE_SYSTEM_PROCESSOR})
  ELSE(CMAKE_CL_64)
    SET(CPACK_SYSTEM_NAME win32-${CMAKE_SYSTEM_PROCESSOR})
  ENDIF(CMAKE_CL_64)
ENDIF(${CPACK_SYSTEM_NAME} MATCHES Windows)

IF(NOT DEFINED CPACK_PACKAGE_FILE_NAME)
# if the CPACK_PACKAGE_FILE_NAME is not defined by the cache
# default to source package - system, on cygwin system is not 
# needed
  IF(CYGWIN)
    SET(CPACK_PACKAGE_FILE_NAME "${CPACK_SOURCE_PACKAGE_FILE_NAME}")
  ELSE(CYGWIN)
    SET(CPACK_PACKAGE_FILE_NAME 
      "${CPACK_SOURCE_PACKAGE_FILE_NAME}-${CPACK_SYSTEM_NAME}")
  ENDIF(CYGWIN)
ENDIF(NOT DEFINED CPACK_PACKAGE_FILE_NAME)

IF(WIN32 AND NOT UNIX)
  # There is a bug in NSI that does not handle full unix paths properly. Make
  # sure there is at least one set of four (4) backlasshes.
  #SET(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
  SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\spagedi.exe")
  SET(CPACK_NSIS_DISPLAY_NAME "${SPAGEDI_NAME} ${SPAGEDI_VERSION}")
  SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.ulb.ac.be\\\\sciences\\\\ecoevol\\\\spagedi.html")
  SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.ulb.ac.be\\\\sciences\\\\ecoevol\\\\spagedi.html")
  SET(CPACK_NSIS_CONTACT "ohardy@ulb.ac.be")
  SET(CPACK_NSIS_MODIFY_PATH ON)
  SET(CPACK_SOURCE_GENERATOR "ZIP")
ELSEIF(APPLE)
  SET(CPACK_SOURCE_GENERATOR "TBZ2") 
  SET(CPACK_GENERATOR "PackageMaker")
  IF(APPLE_BUNDLE)
    # make sure CMAKE_INSTALL_PREFIX ends in /
    STRING(LENGTH "${CMAKE_INSTALL_PREFIX}" LEN)
    MATH(EXPR LEN "${LEN} -1" )
    STRING(SUBSTRING "${CMAKE_INSTALL_PREFIX}" ${LEN} 1 ENDCH)
    IF(NOT "${ENDCH}" STREQUAL "/")
      SET(CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/")
    ENDIF(NOT "${ENDCH}" STREQUAL "/")
    SET(CPACK_PACKAGE_DEFAULT_LOCATION ${CMAKE_INSTALL_PREFIX})
    SET(SPAGEDI_BUNDLE_NAME "${SPAGEDI_NAME} ${SPAGEDI_VERSION}")
	IF(APPLE_BUNDLE_APP)
	  SET(SPAGEDI_BUNDLE_LOCATION "../..")
      SET(CPACK_PACKAGING_INSTALL_PREFIX "/${SPAGEDI_BUNDLE_NAME}.app/Contents")
      SET(CMAKE_INSTALL_PREFIX 
        "${CMAKE_INSTALL_PREFIX}${CMAKE_BUNDLE_NAME}.app/Contents")
	ELSE(APPLE_BUNDLE_APP)
	  SET(CPACK_PACKAGING_INSTALL_PREFIX "/${SPAGEDI_BUNDLE_NAME}")
      SET(CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}${CMAKE_BUNDLE_NAME}")
    ENDIF(APPLE_BUNDLE_APP)
    CONFIGURE_FILE("postflight.sh.in" "postflight.sh")	  
    SET(CPACK_POSTFLIGHT_SCRIPT "postflight.sh")
	ELSE(APPLE_BUNDLE)
  ENDIF(APPLE_BUNDLE)
ELSE(WIN32 AND NOT UNIX)
  SET(CPACK_SOURCE_GENERATOR "TBZ2") 
  SET(CPACK_GENERATOR "TBZ2")
  SET(CPACK_STRIP_FILES "bin/spagedi")
ENDIF(WIN32 AND NOT UNIX)

INCLUDE(CPack)

ADD_CUSTOM_TARGET(new_package_source
	COMMAND ${CMAKE_COMMAND} -D VERFILE=${CMAKE_CURRENT_BINARY_DIR}/src/version.h
	                         -P ${CMAKE_SOURCE_DIR}/new_package_source.cmake
)

INSTALL(FILES manual.pdf copying.txt readme.txt DESTINATION ${CMAKE_DOC_DIR})

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(example_data)

#INCLUDE(InstallRequiredSystemLibraries)

