INCLUDE(CheckIncludeFile)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckLibraryExists)

SET(MY_C_FLAGS)
SET(MY_EXE_LINKER_FLAGS)

ADD_DEFINITIONS(-DHAVE_CONFIG_H -DNDEBUG "\"-DPACKAGE_STRING=\\\"${SPAGEDI_NAME} ${SPAGEDI_VERSION}\\\"\"")

IF(CMAKE_COMPILER_IS_GNUCC)
  SET(MY_C_FLAGS "${MY_C_FLAGS} -Wall -Wno-unused-variable -pipe -g -O2")
ENDIF(CMAKE_COMPILER_IS_GNUCC)

IF(MSVC)
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)
  ADD_DEFINITIONS(-D_SCL_SECURE_NO_DEPRECATE)
  SET(MY_C_FLAGS "${MY_C_FLAGS} /wd4100 /wd4101 /wd4189 /wd4706")
ENDIF(MSVC)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MY_C_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${MY_EXE_LINKER_FLAGS}")

IF(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv|nmake)")
   # Use the highest warning level for visual studio.
   SET(CMAKE_C_WARNING_LEVEL 4)
   IF(CMAKE_C_FLAGS MATCHES "/W[0-4]")
     STRING(REGEX REPLACE "/W[0-4]" "/W4"
            CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
   ELSE(CMAKE_C_FLAGS MATCHES "/W[0-4]")
     SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4")
   ENDIF(CMAKE_C_FLAGS MATCHES "/W[0-4]")
ENDIF(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv|nmake)")


IF(UNIX)
	SET(CMAKE_REQUIRED_LIBRARIES m)
ENDIF(UNIX)

CHECK_INCLUDE_FILE("unistd.h" HAVE_UNISTD_H)
CHECK_INCLUDE_FILE("direct.h" HAVE_DIRECT_H)
CHECK_INCLUDE_FILE("conio.h" HAVE_CONIO_H)
CHECK_FUNCTION_EXISTS("chdir" HAVE_CHDIR)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)

ADD_EXECUTABLE(spagedi main.c Autoccomp.c Autoccomp.h Xatools.c Xatools.h Autocio.c Autocio.h)

TARGET_LINK_LIBRARIES(spagedi ${CMAKE_REQUIRED_LIBRARIES} ${CURSES_LIBRARIES})

INSTALL(TARGETS spagedi RUNTIME DESTINATION bin)

